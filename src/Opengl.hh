#ifndef OPENGL_HH_
# define OPENGL_HH_

# ifdef _WIN32
#  include <windows.h>
#  include <GL/glut.h>
# else
# define GL_GLEXT_PROTOTYPES 1
# endif

# include <GL/gl.h>
# include <GL/glu.h>
# include <GL/glext.h>

bool initExtensions();

# ifndef GL_GLEXT_PROTOTYPES

#  define EXPORT_EXTENSION(EXT, TYPE) extern PFN##TYPE##PROC EXT

EXPORT_EXTENSION(glMultiTexCoord2fARB, GLMULTITEXCOORD2FARB);
EXPORT_EXTENSION(glActiveTexture, GLACTIVETEXTURE);
EXPORT_EXTENSION(glMultiTexCoord3i, GLMULTITEXCOORD3I);

// BASIC
// EXPORT_EXTENSION(glGetString, GLGETSTRING);
// EXPORT_EXTENSION(glGetIntegerv, GLGETINTEGERV);
EXPORT_EXTENSION(glGetStringi, GLGETSTRINGI);
// EXPORT_EXTENSION(glClear, GLCLEAR);

// Program
EXPORT_EXTENSION(glCreateProgram, GLCREATEPROGRAM);
EXPORT_EXTENSION(glDeleteProgram, GLDELETEPROGRAM);
EXPORT_EXTENSION(glUseProgram, GLUSEPROGRAM);
EXPORT_EXTENSION(glAttachShader, GLATTACHSHADER);
EXPORT_EXTENSION(glDetachShader, GLDETACHSHADER);
EXPORT_EXTENSION(glLinkProgram, GLLINKPROGRAM);
EXPORT_EXTENSION(glGetProgramiv, GLGETPROGRAMIV);
EXPORT_EXTENSION(glGetShaderInfoLog, GLGETSHADERINFOLOG);
EXPORT_EXTENSION(glGetUniformLocation, GLGETUNIFORMLOCATION);
EXPORT_EXTENSION(glUniform1i, GLUNIFORM1I);
EXPORT_EXTENSION(glUniform1iv, GLUNIFORM1IV);
EXPORT_EXTENSION(glUniform2iv, GLUNIFORM2IV);
EXPORT_EXTENSION(glUniform3iv, GLUNIFORM3IV);
EXPORT_EXTENSION(glUniform4iv, GLUNIFORM4IV);

EXPORT_EXTENSION(glUniform1f, GLUNIFORM1F);
EXPORT_EXTENSION(glUniform1fv, GLUNIFORM1FV);
EXPORT_EXTENSION(glUniform2fv, GLUNIFORM2FV);
EXPORT_EXTENSION(glUniform3fv, GLUNIFORM3FV);
EXPORT_EXTENSION(glUniform4fv, GLUNIFORM4FV);

EXPORT_EXTENSION(glUniform1d, GLUNIFORM1D);
EXPORT_EXTENSION(glUniform1dv, GLUNIFORM1DV);
EXPORT_EXTENSION(glUniform2dv, GLUNIFORM2DV);
EXPORT_EXTENSION(glUniform3dv, GLUNIFORM3DV);
EXPORT_EXTENSION(glUniform4dv, GLUNIFORM4DV);


EXPORT_EXTENSION(glUniform1ui, GLUNIFORM1UI);
EXPORT_EXTENSION(glUniform1uiv, GLUNIFORM1UIV);
EXPORT_EXTENSION(glUniform2uiv, GLUNIFORM2UIV);
EXPORT_EXTENSION(glUniform3uiv, GLUNIFORM3UIV);
EXPORT_EXTENSION(glUniform4uiv, GLUNIFORM4UIV);

EXPORT_EXTENSION(glUniformMatrix2fv, GLUNIFORMMATRIX2FV);
EXPORT_EXTENSION(glUniformMatrix3fv, GLUNIFORMMATRIX3FV);
EXPORT_EXTENSION(glUniformMatrix4fv, GLUNIFORMMATRIX4FV);


EXPORT_EXTENSION(glUniformMatrix2x3fv, GLUNIFORMMATRIX2X3FV);
EXPORT_EXTENSION(glUniformMatrix2x4fv, GLUNIFORMMATRIX2X4FV);
EXPORT_EXTENSION(glUniformMatrix3x2fv, GLUNIFORMMATRIX3X2FV);
EXPORT_EXTENSION(glUniformMatrix3x4fv, GLUNIFORMMATRIX3X4FV);
EXPORT_EXTENSION(glUniformMatrix4x2fv, GLUNIFORMMATRIX4X2FV);
EXPORT_EXTENSION(glUniformMatrix4x3fv, GLUNIFORMMATRIX4X3FV);

EXPORT_EXTENSION(glGetAttribLocation, GLGETATTRIBLOCATION);
EXPORT_EXTENSION(glVertexAttrib1f, GLVERTEXATTRIB1F);
EXPORT_EXTENSION(glVertexAttrib1fv, GLVERTEXATTRIB1FV);
EXPORT_EXTENSION(glVertexAttrib2fv, GLVERTEXATTRIB2FV);
EXPORT_EXTENSION(glVertexAttrib3fv, GLVERTEXATTRIB3FV);
EXPORT_EXTENSION(glVertexAttrib4fv, GLVERTEXATTRIB4FV);
EXPORT_EXTENSION(glEnableVertexAttribArray, GLENABLEVERTEXATTRIBARRAY);
EXPORT_EXTENSION(glDisableVertexAttribArray, GLDISABLEVERTEXATTRIBARRAY);
EXPORT_EXTENSION(glBindAttribLocation, GLBINDATTRIBLOCATION);
EXPORT_EXTENSION(glGetActiveUniform, GLGETACTIVEUNIFORM);

// Shader
EXPORT_EXTENSION(glCreateShader, GLCREATESHADER);
EXPORT_EXTENSION(glDeleteShader, GLDELETESHADER);
EXPORT_EXTENSION(glShaderSource, GLSHADERSOURCE);
EXPORT_EXTENSION(glCompileShader, GLCOMPILESHADER);
EXPORT_EXTENSION(glGetShaderiv, GLGETSHADERIV);

// VBO
EXPORT_EXTENSION(glGenBuffers, GLGENBUFFERS);
EXPORT_EXTENSION(glBindBuffer, GLBINDBUFFER);
EXPORT_EXTENSION(glBufferData, GLBUFFERDATA);
EXPORT_EXTENSION(glVertexAttribPointer, GLVERTEXATTRIBPOINTER);

// VAO
//EXPORT_EXTENSION(glDrawArrays, PFNGLDRAWARRAYSINSTANCEDPROC);
EXPORT_EXTENSION(glBindVertexArray, GLBINDVERTEXARRAY);
EXPORT_EXTENSION(glGenVertexArrays, GLGENVERTEXARRAYS);

#  undef EXPORT_EXTENSION
# endif

#endif /* !OPENGL_HH_ */
